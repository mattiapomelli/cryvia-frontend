{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "jsx-a11y",
    "simple-import-sort",
    "import"
  ],
  "ignorePatterns": [
    "next.config.js",
    "tailwind.config.js"
  ],
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "jsx-a11y/anchor-is-valid": "off",
    "react/prop-types": "off", // We will use TypeScript's types for component props instead
    "@typescript-eslint/no-explicit-any": "off",
    "simple-import-sort/imports": ["error", {
      "groups": [
        // Side effect imports.
        ["^\\u0000"],
        // `react` related packages, `next` related packages, other packages.
        ["react", "^next", "^@?\\w"],
        // Absolute imports and other imports such as `@/foo`.
        // Relative imports
        // Anything not matched in another group.
        ["^", "^\\."]
      ]
    }],
    "simple-import-sort/exports": "error"
  }
}
